from tests.gherkinexecutor.Feature_Data_Definition import *
from typing import List
import sys

class Feature_Data_Definition_glue:
    DNCString = "?DNC?"


    def Given_table_is(self, values: List[ATest]) -> None:
        print("---  " + "Given_table_is")
        for value in values:
            print(value)
             # Add calls to production code and asserts
            i = value.to_ATestInternal()
        raise NotImplementedError("Must implement")

    def When_compared_to(self, values: List[ATest]) -> None:
        print("---  " + "When_compared_to")
        for value in values:
            print(value)
             # Add calls to production code and asserts
            i = value.to_ATestInternal()
        raise NotImplementedError("Must implement")

    def Then_result_is(self, values: List[List[str]]) -> None:
        print("---  " + "Then_result_is")
        for value in values:
            print(value)
             # Add calls to production code and asserts
        raise NotImplementedError("Must implement")

    def Given_these_are_all_the_types(self, values: List[AllTypes]) -> None:
        print("---  " + "Given_these_are_all_the_types")
        for value in values:
            print(value)
             # Add calls to production code and asserts
            i = value.to_AllTypesInternal()
        raise NotImplementedError("Must implement")

